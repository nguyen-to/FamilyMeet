/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as FeatureRouteImport } from './routes/feature'
import { Route as IndexRouteImport } from './routes/index'
import { Route as FamilymeetIndexRouteImport } from './routes/familymeet/index'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthChangepasswordRouteImport } from './routes/auth/changepassword'
import { Route as FamilylayoutMaincontentRouteImport } from './routes/_familylayout/maincontent'
import { Route as FamilylayoutFamilylayoutRouteImport } from './routes/_familylayout/_familylayout'

const FeatureRoute = FeatureRouteImport.update({
  id: '/feature',
  path: '/feature',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const FamilymeetIndexRoute = FamilymeetIndexRouteImport.update({
  id: '/familymeet/',
  path: '/familymeet/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthChangepasswordRoute = AuthChangepasswordRouteImport.update({
  id: '/auth/changepassword',
  path: '/auth/changepassword',
  getParentRoute: () => rootRouteImport,
} as any)
const FamilylayoutMaincontentRoute = FamilylayoutMaincontentRouteImport.update({
  id: '/_familylayout/maincontent',
  path: '/maincontent',
  getParentRoute: () => rootRouteImport,
} as any)
const FamilylayoutFamilylayoutRoute =
  FamilylayoutFamilylayoutRouteImport.update({
    id: '/_familylayout/_familylayout',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/feature': typeof FeatureRoute
  '/maincontent': typeof FamilylayoutMaincontentRoute
  '/auth/changepassword': typeof AuthChangepasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/familymeet': typeof FamilymeetIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/feature': typeof FeatureRoute
  '/maincontent': typeof FamilylayoutMaincontentRoute
  '/auth/changepassword': typeof AuthChangepasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/familymeet': typeof FamilymeetIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/feature': typeof FeatureRoute
  '/_familylayout/_familylayout': typeof FamilylayoutFamilylayoutRoute
  '/_familylayout/maincontent': typeof FamilylayoutMaincontentRoute
  '/auth/changepassword': typeof AuthChangepasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/familymeet/': typeof FamilymeetIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/feature'
    | '/maincontent'
    | '/auth/changepassword'
    | '/auth/login'
    | '/auth/register'
    | '/familymeet'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/feature'
    | '/maincontent'
    | '/auth/changepassword'
    | '/auth/login'
    | '/auth/register'
    | '/familymeet'
  id:
    | '__root__'
    | '/'
    | '/feature'
    | '/_familylayout/_familylayout'
    | '/_familylayout/maincontent'
    | '/auth/changepassword'
    | '/auth/login'
    | '/auth/register'
    | '/familymeet/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FeatureRoute: typeof FeatureRoute
  FamilylayoutFamilylayoutRoute: typeof FamilylayoutFamilylayoutRoute
  FamilylayoutMaincontentRoute: typeof FamilylayoutMaincontentRoute
  AuthChangepasswordRoute: typeof AuthChangepasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  FamilymeetIndexRoute: typeof FamilymeetIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/feature': {
      id: '/feature'
      path: '/feature'
      fullPath: '/feature'
      preLoaderRoute: typeof FeatureRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/familymeet/': {
      id: '/familymeet/'
      path: '/familymeet'
      fullPath: '/familymeet'
      preLoaderRoute: typeof FamilymeetIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/changepassword': {
      id: '/auth/changepassword'
      path: '/auth/changepassword'
      fullPath: '/auth/changepassword'
      preLoaderRoute: typeof AuthChangepasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_familylayout/maincontent': {
      id: '/_familylayout/maincontent'
      path: '/maincontent'
      fullPath: '/maincontent'
      preLoaderRoute: typeof FamilylayoutMaincontentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_familylayout/_familylayout': {
      id: '/_familylayout/_familylayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof FamilylayoutFamilylayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FeatureRoute: FeatureRoute,
  FamilylayoutFamilylayoutRoute: FamilylayoutFamilylayoutRoute,
  FamilylayoutMaincontentRoute: FamilylayoutMaincontentRoute,
  AuthChangepasswordRoute: AuthChangepasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  FamilymeetIndexRoute: FamilymeetIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
